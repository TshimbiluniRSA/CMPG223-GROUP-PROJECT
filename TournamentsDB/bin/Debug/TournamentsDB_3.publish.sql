/*
Deployment script for TournamentsDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TournamentsDB"
:setvar DefaultFilePrefix "TournamentsDB"
:setvar DefaultDataPath "C:\Users\Aaryadev\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\Aaryadev\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[EmployeesInfo]...';


GO
CREATE TABLE [dbo].[EmployeesInfo] (
    [Id]        INT        NOT NULL,
    [FirstName] NCHAR (10) NULL,
    [LastName]  NCHAR (10) NULL,
    [Username]  NCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Game]...';


GO
CREATE TABLE [dbo].[Game] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[MatchInfo]...';


GO
CREATE TABLE [dbo].[MatchInfo] (
    [Id]            INT NOT NULL,
    [Team1_ID]      INT NULL,
    [Team2_ID]      INT NULL,
    [Team1_Score]   INT NULL,
    [Team2_Score]   INT NULL,
    [ TournamentID] INT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Platform]...';


GO
CREATE TABLE [dbo].[Platform] (
    [Id]   INT       IDENTITY (1, 1) NOT NULL,
    [Name] CHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[PlayersInfo]...';


GO
CREATE TABLE [dbo].[PlayersInfo] (
    [Id]        INT           NOT NULL,
    [FirstName] NVARCHAR (40) NULL,
    [LastName]  NVARCHAR (40) NULL,
    [Username]  NVARCHAR (30) NULL,
    [Email]     CHAR (60)     NULL,
    [Team_ID]   INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TeamsInfo]...';


GO
CREATE TABLE [dbo].[TeamsInfo] (
    [Id]           INT             NOT NULL,
    [TeamName]     NCHAR (40)      NULL,
    [Team_website] NVARCHAR (2000) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Tournament]...';


GO
CREATE TABLE [dbo].[Tournament] (
    [Id]                  INT      IDENTITY (1, 1) NOT NULL,
    [StartDate]           DATETIME NOT NULL,
    [GameUsedID]          INT      NOT NULL,
    [PlatformID]          INT      NOT NULL,
    [MaximumParticipants] SMALLINT NOT NULL,
    [LastEnterenceDate]   DATETIME NOT NULL,
    [VenueID]             INT      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[VanueInfo]...';


GO
CREATE TABLE [dbo].[VanueInfo] (
    [Id]        INT        IDENTITY (1, 1) NOT NULL,
    [VenueName] NCHAR (30) NULL,
    [Location]  NCHAR (30) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_GameUsed_ID]...';


GO
ALTER TABLE [dbo].[Tournament] WITH NOCHECK
    ADD CONSTRAINT [FK_GameUsed_ID] FOREIGN KEY ([GameUsedID]) REFERENCES [dbo].[Game] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_PlatformID]...';


GO
ALTER TABLE [dbo].[Tournament] WITH NOCHECK
    ADD CONSTRAINT [FK_PlatformID] FOREIGN KEY ([PlatformID]) REFERENCES [dbo].[Platform] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_VenueID]...';


GO
ALTER TABLE [dbo].[Tournament] WITH NOCHECK
    ADD CONSTRAINT [FK_VenueID] FOREIGN KEY ([VenueID]) REFERENCES [dbo].[VanueInfo] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Tournament] WITH CHECK CHECK CONSTRAINT [FK_GameUsed_ID];

ALTER TABLE [dbo].[Tournament] WITH CHECK CHECK CONSTRAINT [FK_PlatformID];

ALTER TABLE [dbo].[Tournament] WITH CHECK CHECK CONSTRAINT [FK_VenueID];


GO
PRINT N'Update complete.';


GO
